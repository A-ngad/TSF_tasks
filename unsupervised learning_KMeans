#importing librarys
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

#loading Iris dataset to notebook
irisDB = pd.read_csv("C:\\Users\\angad\\Downloads\\Iris.csv")
#checking the first 10 rows
print(irisDB.head(10))
print(irisDB.sample(n=10 , replace=True)) # using sample to randomise print data soo i can know all the species name

from sklearn.cluster import KMeans
#wcss = within clustor sum of squares
wcss=[]

features = irisDB.iloc[:, [1, 2, 3, 4]].values

#finding optimum number of clusters for KMeans classification
for i in range(1,11):
    kmeans = KMeans(
                    n_clusters = i,
                    init = 'k-means++', 
                    max_iter = 300,
                    n_init = 10,
                    random_state = 0)
    kmeans.fit(features)
    wcss.append(kmeans.inertia_) # lower value of i.inertia_ is better and '0' zero is optimal 
    
# Plotting the results on a line graph, 
plt.plot(range(1,11), wcss)
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

# Creating the kmeans classifier
kmeans = KMeans(
                n_clusters = 3,
                init = 'k-means++',
                max_iter = 300,
                n_init = 10,
                random_state = 0)
cluster = kmeans.fit_predict(features)

# Visualising the clusterss
plt.scatter(features[cluster == 0, 0], features[cluster == 0, 1], 
            s = 100, c = 'yellow', label = 'cluster1_sesota')
plt.scatter(features[cluster == 1, 0], features[cluster == 1, 1], 
            s = 100, c = 'blue', label = 'cluster2_versicolour')
plt.scatter(features[cluster == 2, 0], features[cluster == 2, 1],
            s = 100, c = 'green', label = 'cluster3_virginica')

# Plotting the centroids of the clusters
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:,1], 
            s = 100, c = 'red', label = 'Centroids')
plt.legend()
