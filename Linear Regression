#importing libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
%matplotlib inline

#Getting data from URL
data = pd.read_csv("https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv")
print(data.head(5))
print(data.describe())

#visualising data in a graphical form using matplotlib to find relationship between Hours studied and Percentage obtained
data.plot(x='Hours' , y='Scores',style='ro')
plt.title("Hours/Scores")
plt.xlabel("Total hours studied")
plt.ylabel("Percentage obtained")
plt.show()

#splitting the Data into Inputs and Outputs
hours=data.iloc[:,:-1]
score=data.iloc[:,1]
print(hours.head(5))
print(score.head(5))

#splitting data into training and testing samples
from sklearn.model_selection import train_test_split
H_train,H_test,S_train,S_test = train_test_split(hours,score,test_size=0.1)

#Training algorithm'
from sklearn.linear_model import LinearRegression
LR = LinearRegression()
LR.fit(H_train,S_train)

#plotting the regression line in graph
plt.scatter(hours,score)
plt.plot(hours, LR.coef_*hours + LR.intercept_);
plt.show()

print(H_test) # Testing data - In Hours
s_pred = LR.predict(H_test) # Predicting the scores

# Comparing Real valus against Predicted values
comp = pd.DataFrame({'Real': S_test, 'Predicted': s_pred})  
print(comp) 

#predicting score for the student who studied for 9.25 hours as specified in the task
predicted = LR.predict([[9.25]])
print("No of Hours = {}".format(9.25))
print("Predicted Score = {}".format(predicted[0]))

#Testing accuracy of the model
import sklearn.metrics as sm
print("R2 score =", sm.r2_score(S_test, s_pred))
print('Mean Absolute Error:', sm.mean_absolute_error(S_test, s_pred))
